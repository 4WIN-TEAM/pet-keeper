@model IEnumerable<PetKeeper.Models.PodaciViewModel>

    @{
    var podaciViewModel = new PodaciViewModel() { };
    }
    <partial name="_CreatePartial" for="@podaciViewModel">


        <div id="openModal"></div>

        @if (User.Identity.IsAuthenticated)
        {

        @if (User.IsInRole("Admin"))
        {
            @* START REZERVACIJA ADMIN *@
        <div class=" container-fluid gallery-container">
            <h1></h1>
            <div class="tz-gallery">
                <h2 class="page-description text-center">Pogledajte gde će vaš ljubimac biti smešten!</h2>
                <div class="col-lg-12 col-auto">
                    <div class="table-responsive">
                        <table class="table text-nowrap rezervacije-tbl table-borderless">
                            <thead class="thead-dark">
                                <tr>
                                    <th> Korisnik </th>
                                    <th> @Html.DisplayNameFor(model => model.Ime)</th>
                                    <th> @Html.DisplayNameFor(model => model.Starost)</th>
                                    <th>Datum prijema</th>
                                    <th>Datum odjave</th>
                                    <th>@Html.DisplayNameFor(model => model.Rasa)</th>
                                    <th>@Html.DisplayNameFor(model => model.Pol)</th>
                                    <th>@Html.DisplayNameFor(model => model.Sterilisan)</th>
                                    <th>@Html.DisplayNameFor(model => model.Vakcinisan)</th>
                                    <th>@Html.DisplayNameFor(model => model.Status)</th>
                                    <th></th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var item in Model)
                                {
                                <tr class="@(item.Status.ToString() == "Odbijeno" ? "table-warning" : "" )">
                                    <td>@Html.DisplayFor(modelItem => item.UserName)</td>
                                    <td>@Html.DisplayFor(modelItem => item.Ime)</td>
                                    <td>@Html.DisplayFor(modelItem => item.Starost)</td>
                                    <td>@Html.DisplayFor(modelItem => item.DatumPrijema)</td>
                                    <td>@Html.DisplayFor(modelItem => item.DatumOdjave)</td>
                                    <td>@Html.DisplayFor(modelItem => item.Rasa)</td>
                                    <td>@Html.DisplayFor(modelItem => item.Pol)</td>
                                    <td>@Html.DisplayFor(modelItem => item.Sterilisan)</td>
                                    <td>@Html.DisplayFor(modelItem => item.Vakcinisan)</td>
                                    <td>@Html.DisplayFor(modelItem => item.Status)</td>
                                    <td>
                                        <button type="button" class="btn btn-outline-primary btn-sm"
                                            onclick="getEdit(@item.Id)">Izmeni</button>
                                        <button type="button" class="btn btn-outline-info btn-sm m-0"
                                            onclick="getDetails(@item.Id)">Detalji</button>
                                        <button type="button" class="btn btn-outline-danger btn-sm m-0"
                                            onclick="getDeleted(@item.Id)">Izbriši</button>
                                    </td>
                                </tr>
                                }

                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
        </div>
            @* END REZERVACIJA ADMIN *@
        } else
        {
            @* START REZERVACIJA KORISNIK *@
        <div class=" container gallery-container">
            <h1></h1>
            <div class="tz-gallery">
                <h2 class="page-description text-center">VAŠE REZERVACIJE</h2>
                <div class="container-flex section2-container">
                    <div class="row section2-row">
                        @foreach (var item in Model)
                        {
                         @* START KARTICA *@
                        <div class="col-md-6 mb-3">
                            <div class="card text-white bg-card2 border-success mb-3 h-100 col-md-6" style="max-width: 25rem;">
                                <div class="card-header @(item.Status.ToString()=="Odbijeno" ? "bg-danger"
                                 : item.Status.ToString()=="Prihvaćeno" ? "bg-success" : "")">
                                    <h4 class="list1_title1">@Html.DisplayFor(modelItem => item.Ime)</h4>
                                </div>
                                <div class="card-body">
                                    <div class="thumbnail">
                                        <img class="img-thumbnail1" src="images/druzenje.jpg" alt="kuca1">
                                        <div class="caption caption_list1 maxheight">
                                            <div class="box_inner podaci">
                                                <p class="">Prijem: @Html.DisplayFor(modelItem => item.DatumPrijema)
                                                </p>
                                                <p class="">Odjava: @Html.DisplayFor(modelItem => item.DatumOdjave) </p>
                                                <p class="">Rasa: @Html.DisplayFor(modelItem => item.Rasa) </p>
                                                <p class="">Status: @Html.DisplayFor(modelItem => item.Status) </p>
                                            </div>
                                        </div>
                                        @* START BUTTON GRUPA *@
                                        <div class="btn-reserve text-center">
                                        <button type="button" class="btn btn-primary" onclick="getEdit(@item.Id)"
                                            @(item.Status.ToString()=="Odbijeno" ||item.Status.ToString()=="Prihvaćeno"
                                            ? "Disabled" : "" )><i class="fas fa-2x fa-edit"></i></button>
                                        <button type="button" class="btn btn-info"
                                            onclick="getDetails(@item.Id)" @(item.Status.ToString()=="Odbijeno"
                                            ? "Disabled" : "" )><i class="fas fa-2x fa-info-circle"></i></button>
                                        <button type="button" class="btn btn-danger"
                                            onclick="getDeleted(@item.Id)" @(item.Status.ToString()=="Odbijeno"
                                            ||item.Status.ToString()=="Prihvaćeno" ? "Disabled" : "" )><i class="fas fa-2x fa-trash-alt"></i></button>
                                        </div>   
                                        @* END BUTTON GRUPA *@
                                    </div>
                                </div>
                            </div>
                        </div>
                         @* END KARTICA *@
                        }
                    </div>
                </div>
            </div>
            <div class="btn-kreiraj">
                <button type="button" class="btn btn-kreiraj" data-toggle="modal" data-target="#myModal"
                    data-backdrop="static" data-keyboard="false" style="margin: 6px;">
                    <h4> KREIRAJ NOVU REZERVACIJU</h4>
                </button>
            </div>
        </div>
        @* END REZERVACIJA KORISNIK *@
        }
        }





        @section Scripts {
        @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}

        <script type="text/javascript">
            $('#submitButton').click(function (e) {
                var validated = true;
                var ime = $('#ime').val();
                var starost = $('#starost').val();
                var datumPrijema = $('#datumPrijema').val();
                var datumOdjave = $('#datumOdjave').val();
                var rasa = $('#rasa').find(":selected").val();
                var pol = $('#pol').find(":selected").val();
                var sterilisan = $('#sterilisan').find(":selected").val();
                var vakcinisan = $('#vakcinisan').find(":selected").val();

                var valid = $('#myModalForm').valid();
                if (!valid) {
                    validated = false;
                } else {
                    e.preventDefault();
                }
                //$.validator.unobtrusive.parse($('#myModalForm'));
                if (validated) {
                    var dataToPassToController = {
                        Ime: ime,
                        Starost: starost,
                        DatumPrijema: datumPrijema,
                        DatumOdjave: datumOdjave,
                        Rasa: rasa,
                        Pol: pol,
                        Sterilisan: sterilisan,
                        Vakcinisan: vakcinisan
                    }
                    $.ajax({
                        dataType: "json",
                        data: dataToPassToController,
                        type: "POST",
                        url: "/Reservation/Create",
                        success: function (result) {
                            if (result) {
                                $('#myModal').modal('hide');
                                $('#myModal').on('hidden.bs.modal', function () {
                                    bootbox.alert("Reservacija je uspešno kreirana!",
                                        function () {
                                            location.reload();
                                        });
                                })
                            } else {
                                bootbox.alert("None");
                            }
                        },
                        error: function (request, status, error) {
                            switch (request.status) {
                                case 401:
                                    bootbox.alert(
                                        "You don't have permission to access this resource ! (401 UNAUTHORIZED)"
                                    );
                                    break;
                                case 403:
                                    bootbox.alert(
                                        "You don't have permission to access this resource ! (403 FORBIDDEN)"
                                    );
                                    break;
                                default:
                                    window.location.href = '/Home/Error';
                                    break;
                            }
                        }
                    });
                }
            });

            function getEdit(id) {
                $.ajax({
                    dataType: "html",
                    type: "GET",
                    url: "/Reservation/Edit/" + id,
                    success: function (result) {
                        $('#openModal').html(result);
                        $('#myEditModal').modal('show');
                        $.validator.unobtrusive.parse($('#editModal'));
                        $('#submitButtonEdit').on('click', function (e) {
                            var validated = true;
                            var id = $('#editId').val();
                            var ime = $('#editIme').val();
                            var starost = $('#editStarost').val();
                            var datumPrijema = $('#editDatumPrijema').val();
                            var datumOdjave = $('#editDatumOdjave').val();
                            var rasa = $('#editRasa').find(":selected").val();
                            var pol = $('#editPol').find(":selected").val();
                            var sterilisan = $('#editSterilisan').find(":selected").val();
                            var vakcinisan = $('#editVakcinisan').find(":selected").val();
                            var status = $('#editStatus').find(":selected").val();
                            var user = $('#editUser').val();
                            var userName = $('#editUserName').val();
                            var valid = $('#editModal').valid();
                            if (!valid) {
                                validated = false;
                            } else {
                                e.preventDefault();
                            }
                            if (validated) {
                                var editData = {
                                    Id: id,
                                    Ime: ime,
                                    Starost: starost,
                                    DatumPrijema: datumPrijema,
                                    DatumOdjave: datumOdjave,
                                    Rasa: rasa,
                                    Pol: pol,
                                    Sterilisan: sterilisan,
                                    Vakcinisan: vakcinisan,
                                    Status: status,
                                    User: user,
                                    UserName: userName
                                };
                            }
                            $.ajax({
                                dataType: "json",
                                data: editData,
                                type: "POST",
                                url: "/Reservation/Edit",
                                success: function (result) {
                                    if (result) {
                                        $('#myEditModal').modal('hide');
                                        $('#myEditModal').on('hidden.bs.modal',
                                            function () {
                                                bootbox.alert(
                                                    "Reservacija je uspešno izmenjena!",
                                                    function () {
                                                        location.reload();
                                                    });
                                            })
                                    } else {
                                        bootbox.alert("None");
                                    }
                                }
                            });
                        });
                    },
                    error: function (request, status, error) {
                        switch (request.status) {
                            case 401:
                                bootbox.alert(
                                    "You don't have permission to access this resource ! (401 UNAUTHORIZED)"
                                );
                                break;
                            case 403:
                                bootbox.alert(
                                    "You don't have permission to access this resource ! (403 FORBIDDEN)"
                                );
                                break;
                            default:
                                window.location.href = '/Home/Error';
                                break;
                        }
                    }
                });
            }

            function getDetails(id) {
                $.ajax({
                    dataType: "html",
                    type: "GET",
                    url: "/Reservation/Details/" + id,
                    success: function (result) {
                        $('#openModal').html(result);
                        $('#myDetailsModal').modal();
                    },
                    error: function (request, status, error) {
                        switch (request.status) {
                            case 401:
                                bootbox.alert(
                                    "You don't have permission to access this resource ! (401 UNAUTHORIZED)"
                                );
                                break;
                            case 403:
                                bootbox.alert(
                                    "You don't have permission to access this resource ! (403 FORBIDDEN)"
                                );
                                break;
                            default:
                                window.location.href = '/Home/Error';
                                break;
                        }
                    }
                });
            }

            function getDeleted(id) {
                bootbox.confirm({
                    message: "Do you want to delete this?",
                    buttons: {
                        confirm: {
                            label: 'Yes',
                            className: 'btn-success'
                        },
                        cancel: {
                            label: 'No',
                            className: 'btn-danger'
                        }
                    },
                    callback: function (result) {
                        if (result === true) {
                            $.ajax({
                                dataType: "json",
                                type: "POST",
                                url: "/Reservation/Delete/" + id,
                                success: function (result) {
                                    if (result) {
                                        bootbox.alert("Reservacija je uspešno izbrisana!",
                                            function () {
                                                location.reload();
                                            });
                                    }
                                },
                                error: function (request, status, error) {
                                    switch (request.status) {
                                        case 401:
                                            bootbox.alert(
                                                "You don't have permission to access this resource ! (401 UNAUTHORIZED)"
                                            );
                                            break;
                                        case 403:
                                            bootbox.alert(
                                                "You don't have permission to access this resource! (403 FORBIDDEN)"
                                            );
                                            break;
                                        default:
                                            window.location.href = '/Home/Error';
                                            break;
                                    }
                                }
                            });
                        }
                    }
                });
            }
        </script>
        }